{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","propType","PropType","number","isRequired","string","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAIA,SAASA,EAAT,GAA4D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAChD,OACI,yBAAKC,UAAU,SAEX,yBAAKC,IAAMH,EAASF,MAAQA,EAAQM,IAAMN,IAC1C,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAiBJ,GAC/B,wBAAII,UAAU,eAAgBL,GAC9B,4BACKI,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,wBAAIC,IAAMD,EAAQL,UAAU,iBAAiBI,OAGjD,uBAAGJ,UAAU,kBAAmBH,EAAQU,MAAM,EAAE,KAAhD,SAOhBd,EAAMe,SAAW,CACbd,GAAIe,IAASC,OAAOC,WACpBhB,KAAMc,IAASC,OAAOC,WACtBf,MAAOa,IAASG,OAAOD,WACvBd,QAASY,IAASG,OAAOD,WACzBb,OAAQW,IAASG,OAAOD,YAGblB,QCiFAoB,G,kNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CACZP,WAAW,EACXC,WATQ,2C,kEAcVO,KAAKN,c,+BAIG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAAShB,UAAU,aACfe,EACA,yBAAKf,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZgB,EAAOb,KAAK,SAAAqB,GAAK,OAElB,kBAAC,EAAD,CACE5B,MAAO4B,EAAM5B,MACbU,IAAKkB,EAAM9B,GACXC,KAAM6B,EAAM7B,KACZE,QAAS2B,EAAM3B,QACfC,OAAQ0B,EAAMC,mBACd1B,OAAQyB,EAAMzB,kB,GA1CV2B,IAAMC,YCxDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ecd4abff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropType from \"prop-types\";\r\nimport './components/Movie.css';\r\n\r\nfunction Movie ({ id, year, title, summary, poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n           \r\n            <img src={ poster } title={ title } alt={ title } />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{ title }</h3>\r\n                <h3 className=\"movie__year\">{ year }</h3>\r\n                <ul>\r\n                    {genres.map((genre, index) => \r\n                    <li key={ index } className=\"genres__genre\">{genre}</li>\r\n                    )}\r\n                </ul>\r\n                <p className=\"movie__summary\">{ summary.slice(0,180) }...</p>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propType = {\r\n    id: PropType.number.isRequired,\r\n    year: PropType.number.isRequired,\r\n    title: PropType.string.isRequired,\r\n    summary: PropType.string.isRequired,\r\n    poster: PropType.string.isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n// const songsILike = [\n//   {\n//     id: 0,\n//     title: \"songname1\",\n//     artist: \"somone1\",\n//     rating: 2.2\n//   },\n//   {\n//     id: 1,\n//     title: \"songname2\",\n//     artist: \"somone2\",\n//     rating: 5.2\n//   },\n//   {\n//     id: 2,\n//     title: \"songname3\",\n//     artist: \"somone3\",\n//     rating: 6.7\n//   },\n//   {\n//     id: 3,\n//     title: \"songname4\",\n//     artist: \"somone4\",\n//     rating: 9.9\n//   }\n// ];\n\n\n  \n// function Song({ id, rating, title, artist }){\n//   return <div>\n//     <h4>I like {title} </h4>\n//     <h4>I like {artist} </h4>\n//   </div>\n// }\n\n// // 넘어온 결과의 타입이 맞는지 체크해주는 함수 PropTypes\n// // 여러가지 결과가 넘어오기 때문에 정확하게 넘어왔는지 체크해줌.\n// Song.propTypes = {\n//   rating: PropTypes.number,   // << isRequired가 없다면 Undifined 허용\n//   title: PropTypes.string.isRequired,\n//   artist: PropTypes.string.isRequired\n// };\n\n// function App() {\n//   return (\n//     <div classNameName=\"App\">\n      \n//       {songsILike.map(song => <Song title={song.title} artist={song.artist} rating={song.rating} key={song.id} />)}\n      \n//     </div>\n//   );\n// }\n\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n\n    this.setState({\n      isLoading: false,\n      movies\n    });\n    // console.log(movies);\n  }\n  componentDidMount(){\n    this.getMovies();\n    \n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        { isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map( movie => (\n            \n            <Movie \n              title={movie.title} \n              key={movie.id} \n              year={movie.year}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n              />\n              \n          ))}\n          </div>\n        )}\n      </section>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}